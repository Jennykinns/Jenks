///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// NAME: 
//     geo_to_fluid
//
// AUTHOR:
//     Kiel Gnebba (ksg@kielgnebba.com)
//		
// VERSION: 
//     v. 4.0
//
// DESCRIPTION: 
//     This script will...
//         -will create a fluid container around a selected object based on its boundbox 
//         -will inject density into a fluid based on voxels inside of the geo
//
// INSTALLATION:
//     Copy the script into your scripts/ directory
//     If you're unsure where that is run this in the script editor:
//         internalVar -userScriptDir;
//
// USAGE:
//     To use just run: 
//         {
//         $scriptName = "geo_to_fluid";
//         $scriptDir = "source \"" + `internalVar -userScriptDir` + $scriptName + ".mel\"";
//         evalEcho ($scriptDir);
//         evalEcho ($scriptName);         
//         }   
//         -To Create Fluid Container:
//             -select a poly mesh and hit refresh....this will load the geo to get feedback to the fluids size and resolution 
//                 (if something is selected before opening the ui it will automatically be loaded)
//             -adjust the "fluid size gain" to scale up the fluid...it's a multiplier to the bounding box
//                 a size of 1 will be the exact size of the objs bounding box...>1 will expand it out
//             -adjust the "fluid resolution gain" to change the fluids resolution...it's a multiplier to the the fluids size
//                 a size of 1 will be the exact size of the fluids size
//             -then just click "Create Fluid Container"
//         -To Inject Fluid:
//             -select a poly mesh and a fluid...order doesn't matter (just needs to be 1 fluid and 1 mesh) 
//             -now choose to add or clear density 
//                 "add" will add (+/-) density
//                 "clear" will remove all density (doesn't take into account falloff) -- use -amount if you want to remove with falloff 
//             -"Amount" is the amount of density that will be added (-amount and be added to remove density)
//             -"Falloff" controls whether density will falloff based on distance from objects center.
//                 its a multiplier to the amount from (center --> edge) -- (0 --> 1)
//                 if falloff is set to 1 -- there will be no falloff (1 --> 1) 
//                 if falloff is set to .5 -- the amount will falloff to half (.5 --> 1) 
//             -"invertFalloff" allows you to invert the way it falls off (edge --> center) -- (1 --> 0)
//             -"invertGeo" allows you to invert the geo -- it will fill everything outside the geo 
//
//         - other notes/tips:
//             -work more accurately with all quads -- just do a ploy smooth before you injsct
//             -work more accurately when transforms and history are reset and deleted
//             -sometimes you'll get extra voxels filled outside obj -- just creat a cube, position around extra fluid and clear those voxels
//
// HISTORY:
//     07/22/2010 -- v. 1.0
//         -first release
//    
//     07/26/2010 -- v. 2.0
//         -added ui
//         -added falloff
//         -added add/clear
//         -added inverted falloff and geometry
//   
//     09/07/2010 -- v. 3.0
//         -added temperature and fuel
//         -added noise for both temp and density
//         -added detail noise
//
//     12/15/2011 -- v. 4.0
//         -added UI settings
//         -added auto save settings
//         -added default/previous/save current/save/load options for UI
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_displayText()

global proc geo_to_fluid_displayText(){

    string $proc = "geo_to_fluid_displayText";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//get selection
    $sel = `ls -sl`;
    //$shape = `listRelatives -s $sel[0]`;
    string $displayText = "";
    
    if(size($sel) == 0){
        $displayText = "Nothing Selected....select poly mesh...then click refresh";
    }
    else if(size($sel) > 1){
        $displayText = "more then one object selected...select 1 poly mesh...then click refresh";
    }
    else{
        $shape = `listRelatives -s $sel[0]`;
        if ($shape[0] != ""){
            if(`nodeType $shape[0]` != "mesh"){
                $displayText = "please select only poly mesh...then click refresh";
            }
            else{       
                float $fluidSize = `floatSliderGrp -q -value geo_to_fluid_sizeFSG`;
                float $fluidRes = `floatSliderGrp -q -value geo_to_fluid_resFSG`;
                float $selBoundingBox[] = `xform -q -boundingBox $sel[0]`;
                float $fluidSizeX = floor(($selBoundingBox[3]-$selBoundingBox[0])*$fluidSize);
                float $fluidSizeY = floor(($selBoundingBox[4]-$selBoundingBox[1])*$fluidSize);
                float $fluidSizeZ = floor(($selBoundingBox[5]-$selBoundingBox[2])*$fluidSize);

                if($fluidSizeX%2!=0){
                    $fluidSizeX++;
                }
                if($fluidSizeY%2!=0){
                    $fluidSizeY++;
                }
                if($fluidSizeZ%2!=0){
                    $fluidSizeZ++;
                }

                float $fluidResX = floor($fluidSizeX*$fluidRes);
                float $fluidResY = floor($fluidSizeY*$fluidRes);
                float $fluidResZ = floor($fluidSizeZ*$fluidRes);
                
                $displayText = ("Fluid Size -- " + $fluidSizeX + " " + $fluidSizeY + " " + $fluidSizeZ + "\n");
                $displayText += ("Fluid Resolution -- " + $fluidResX + " " + $fluidResY + " " + $fluidResZ + "\n");
            }
        }
        else{
            $displayText = "please select only poly mesh...then click refresh";
        }
    }
//update text
    scrollField -e -clear geo_to_fluid_createFluidSF;
    scrollField -e -text $displayText geo_to_fluid_createFluidSF;
    

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_displayText


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_create()

global proc geo_to_fluid_create(){

    string $proc = "geo_to_fluid_create";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//get selected geo and create a fluid for each
    $sel = `ls -sl`;
//make sure something is selected
    if(size($sel) == 0){
        warning ("nothing selected...please select poly mesh");
    }
    else if(size($sel) > 1){
        warning ("more then one object selected...please select 1 poly mesh");
    }    
    else{
        $shape = `listRelatives -s $sel[0]`;
        if(`nodeType $shape[0]` != "mesh"){
            warning ("please select only poly mesh");
        }
        else{       
            float $fluidSize = `floatSliderGrp -q -value geo_to_fluid_sizeFSG`;
            float $fluidRes = `floatSliderGrp -q -value geo_to_fluid_resFSG`;
            float $selBoundingBox[] = `xform -q -boundingBox $sel[0]`;
            float $fluidSizeX = floor(($selBoundingBox[3]-$selBoundingBox[0])*$fluidSize);
            float $fluidSizeY = floor(($selBoundingBox[4]-$selBoundingBox[1])*$fluidSize);
            float $fluidSizeZ = floor(($selBoundingBox[5]-$selBoundingBox[2])*$fluidSize);

            if($fluidSizeX%2!=0){
                $fluidSizeX++;
            }
            if($fluidSizeY%2!=0){
                $fluidSizeY++;
            }
            if($fluidSizeZ%2!=0){
                $fluidSizeZ++;
            }

            float $fluidResX = floor($fluidSizeX*$fluidRes);
            float $fluidResY = floor($fluidSizeY*$fluidRes);
            float $fluidResZ = floor($fluidSizeZ*$fluidRes);
            
            $fluid = `create3DFluid $fluidResX $fluidResY $fluidResZ $fluidSizeX $fluidSizeY $fluidSizeZ`;
            $fluidXform = `listRelatives -fullPath -parent $fluid`;
            
            $constraint = `pointConstraint -offset 0 0 0 -weight 1 $sel[0] $fluidXform[0]`;
            delete $constraint;   
            
        //turn on self shadow             
            setAttr ($fluid + ".selfShadowing") 1;
        //rename
            rename $fluidXform ($sel[0] + "_fluid");
        }
    }

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_create


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_inject()

global proc geo_to_fluid_inject(){

    string $proc = "geo_to_fluid_inject";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");
    $startTime[0] = `timerX`;
    global string $gMainProgressBar;

//-------------------------------------------------------------------------------------------------------------
//get selected fluid and geo -- fill fluid based on geo    
    $sel = `ls -sl`;
//make sure something is selected
    if(size($sel) == 0){
        error ("nothing selected...please select poly objects only");
    }
    else if(size($sel) == 1){
        error ("please select 2 objects -- 1 poly object and 1 fluid");
    }
    else if(size($sel) > 2){
        error ("please select only 2 objects -- poly object and fluid");
    }
//make sure selected objs are poly mesh and fluid   
    for($eachMesh in $sel){
        $shape = `listRelatives -s $eachMesh`;
        if(`nodeType $shape[0]` != "mesh" && `nodeType $shape[0]` != "fluidShape"){
            error ("please only select only poly object and fluid");
        }
    }
//figure out which is a fluid and poly
    string $geo;
    string $fluid;
    string $geoShape;
    string $fluidShape;
    $shape0 = `listRelatives -s $sel[0]`;
    if(`nodeType $shape0[0]` == "mesh"){
        $geo = $sel[0];
        $geoShape = $shape0[0];
        $shape1 = `listRelatives -s $sel[1]`;
        $fluid = $sel[1];
        $fluidShape = $shape1[0]; 
    } 
    else{
        $fluid = $sel[0];
        $fluidShape = $shape0[0];
        $shape1 = `listRelatives -s $sel[1]`;
        $geo = $sel[1];
        $geoShape = $shape1[0]; 
    }        
//check to make sure the geo==mesh and the fluid==fluid  
    if(`nodeType $geoShape` != "mesh"){  
        error ("please select only 1 poly object and 1 fluid");
    }
    if(`nodeType $fluidShape` != "fluidShape"){  
        error ("please select only 1 poly object and 1 fluid");
    }    

//load plugin "nearestPointOnMesh.mll" if needed
    $plugin = `pluginInfo -q -l nearestPointOnMesh.mll`;
    if(!$plugin){
        loadPlugin nearestPointOnMesh.mll;
    }

//create nearest point on mesh node if needed
    string $nearNodeName = ($geo + "_npomNode");  
    string $npomNode;
    if(!`objExists $nearNodeName`){
        $npomNode = `createNode nearestPointOnMesh -n $nearNodeName`;
        connectAttr ($geoShape + ".worldMesh") ($npomNode + ".inMesh");
    }
    else{
        $npomNode = $nearNodeName;
    }
    
//get fluid res and fill based on object  
    $fluidResX = `getAttr ($fluidShape + ".resolutionW")`;
    $fluidResY = `getAttr ($fluidShape + ".resolutionH")`;
    $fluidResZ = `getAttr ($fluidShape + ".resolutionD")`;

//get boundingBox to determin falloff
    float $selBoundingBox[] = `xform -q -boundingBox $geo`;
    float $fluidSizeX = floor(($selBoundingBox[3]-$selBoundingBox[0])*.5);
    float $fluidSizeY = floor(($selBoundingBox[4]-$selBoundingBox[1])*.5);
    float $fluidSizeZ = floor(($selBoundingBox[5]-$selBoundingBox[2])*.5);
    float $bBoxFalloff[] = {$fluidSizeX, $fluidSizeY, $fluidSizeZ};
    $bBoxFalloff = `sort $bBoxFalloff`;
    float $falloff = $bBoxFalloff[0];

//get info from ui on what to fill
    //density
    int $densityInvertGeo = `checkBox -q -v geo_to_fluid_densityInvertGeoCB`;
    string $density = "";
    float $setDensity = `checkBox -q -v geo_to_fluid_densityCB`;
    float $setDensityNoise = `checkBox -q -v geo_to_fluid_densityNoiseCB`;
    float $setDensityDetailNoise = `checkBox -q -v geo_to_fluid_densityDetailNoiseCB`;
    float $densityFill = `radioButtonGrp -q -select geo_to_fluid_densityRadio`;
    float $densityAmount = `floatSliderGrp -q -v geo_to_fluid_densityAmountFSG`;
    float $densityFalloff = `floatSliderGrp -q -v geo_to_fluid_densityFalloffFSG`;
    float $densityNoiseScale = `floatSliderGrp -q -v geo_to_fluid_densityNoiseScaleFSG`;
    float $densityNoiseGain = `floatSliderGrp -q -v geo_to_fluid_densityNoiseGainFSG`;   
    float $densityDetailNoiseScale = `floatSliderGrp -q -v geo_to_fluid_densityDetailNoiseScaleFSG`;
    float $densityDetailNoiseGain = `floatSliderGrp -q -v geo_to_fluid_densityDetailNoiseGainFSG`;    
    int $densityInvertFalloff = `checkBox -q -v geo_to_fluid_densityInvertFallCB`;
    float $densityFalloffLin;
    string $densityFillSt = "-ad -fv ";
    string $densityAmountSt = "";
    if($densityFill == 2){
        $densityFillSt = "-re ";
    }
    //set dynamic grid if injecting density
    if($setDensity){
        setAttr ($fluidShape + ".densityMethod") 2;
    }
    //temperature
    int $temperatureInvertGeo = `checkBox -q -v geo_to_fluid_temperatureInvertGeoCB`;
    string $temperature = "";
    float $setTemperature = `checkBox -q -v geo_to_fluid_temperatureCB`;
    float $setTemperatureNoise = `checkBox -q -v geo_to_fluid_temperatureNoiseCB`;
    float $setTemperatureDetailNoise = `checkBox -q -v geo_to_fluid_temperatureDetailNoiseCB`;
    float $temperatureFill = `radioButtonGrp -q -select geo_to_fluid_temperatureRadio`;
    float $temperatureAmount = `floatSliderGrp -q -v geo_to_fluid_temperatureAmountFSG`;
    float $temperatureFalloff = `floatSliderGrp -q -v geo_to_fluid_temperatureFalloffFSG`;
    float $temperatureNoiseScale = `floatSliderGrp -q -v geo_to_fluid_temperatureNoiseScaleFSG`;
    float $temperatureNoiseGain = `floatSliderGrp -q -v geo_to_fluid_temperatureNoiseGainFSG`;   
    float $temperatureDetailNoiseScale = `floatSliderGrp -q -v geo_to_fluid_temperatureDetailNoiseScaleFSG`;
    float $temperatureDetailNoiseGain = `floatSliderGrp -q -v geo_to_fluid_temperatureDetailNoiseGainFSG`;    
    int $temperatureInvertFalloff = `checkBox -q -v geo_to_fluid_temperatureInvertFallCB`;
    float $temperatureFalloffLin;
    string $temperatureFillSt = "-ad -fv ";
    string $temperatureAmountSt = "";
    if($temperatureFill == 2){
        $temperatureFillSt = "-re ";
    }
    //set dynamic grid if injecting temperature
    if($setTemperature){
        setAttr ($fluidShape + ".temperatureMethod") 2;
    }
    //fuel
    int $fuelInvertGeo = `checkBox -q -v geo_to_fluid_fuelInvertGeoCB`;
    string $fuel = "";
    float $setFuel = `checkBox -q -v geo_to_fluid_fuelCB`;
    float $setFuelNoise = `checkBox -q -v geo_to_fluid_fuelNoiseCB`;
    float $setFuelDetailNoise = `checkBox -q -v geo_to_fluid_fuelDetailNoiseCB`;
    float $fuelFill = `radioButtonGrp -q -select geo_to_fluid_fuelRadio`;
    float $fuelAmount = `floatSliderGrp -q -v geo_to_fluid_fuelAmountFSG`;
    float $fuelFalloff = `floatSliderGrp -q -v geo_to_fluid_fuelFalloffFSG`;
    float $fuelNoiseScale = `floatSliderGrp -q -v geo_to_fluid_fuelNoiseScaleFSG`;
    float $fuelNoiseGain = `floatSliderGrp -q -v geo_to_fluid_fuelNoiseGainFSG`;   
    float $fuelDetailNoiseScale = `floatSliderGrp -q -v geo_to_fluid_fuelDetailNoiseScaleFSG`;
    float $fuelDetailNoiseGain = `floatSliderGrp -q -v geo_to_fluid_fuelDetailNoiseGainFSG`;    
    int $fuelInvertFalloff = `checkBox -q -v geo_to_fluid_fuelInvertFallCB`;
    float $fuelFalloffLin;
    string $fuelFillSt = "-ad -fv ";
    string $fuelAmountSt = "";
    if($fuelFill == 2){
        $fuelFillSt = "-re ";
    }
    //set dynamic grid if injecting fuel
    if($setFuel){
        setAttr ($fluidShape + ".fuelMethod") 2;
    }    
    
//apply preset if exists
    $presetDir = "";
    //$presetDir = "N:/prod/springvalley_3222P/project/CGAssets/Scripts/MEL/fx/presets/springValley_clouds_001.mel";
    //$presetDir = "C:/Documents and Settings/Administrator/My Documents/maya/2011-x64/presets/attrPresets/fluidShape/a_guy_fluidShape.mel";
    //$presetDir = "C:/Documents and Settings/Administrator/My Documents/maya/2011-x64/presets/attrPresets/fluidShape/a_cloud_geo_fluidShape.mel";
    if (`file -q -exists $presetDir` && $presetDir != ""){ 
        applyPresetToNode $fluidShape "" "" $presetDir 1;    
    }

//progress bar        
    int $amount = 0;
    float $progress = 100/($fluidResY);
    int $progressAmount = floor($progress); 
    progressBar -e -maxValue $fluidResY geo_to_fluid_progBar;
    progressBar -edit -beginProgress -isInterruptable true -status "Injecting Fluid..." -maxValue $fluidResY $gMainProgressBar;
    text -e -label "Injecting Fluid...(Press ESC To Cancel)" geo_to_fluid_cancelTxt;
    
//loop through and fill    
    float $x;
    float $y;
    float $z;
    for ($y = 0; $y < $fluidResY; $y++){
        for ($x = 0; $x < $fluidResX; $x++){
            for ($z = 0; $z < $fluidResZ; $z++){
                float $voxelCenter[] = `fluidVoxelInfo -voxelCenter -xi $x -yi $y -zi $z $fluid`;
                vector $voxelCenterVector = <<$voxelCenter[0], $voxelCenter[1], $voxelCenter[2]>>;                
                setAttr ($npomNode + ".inPositionX") ($voxelCenterVector.x);
                setAttr ($npomNode + ".inPositionY") ($voxelCenterVector.y);
                setAttr ($npomNode + ".inPositionZ") ($voxelCenterVector.z);
                float $closestPtX = `getAttr ($npomNode + ".positionX")`;
                float $closestPtY = `getAttr ($npomNode + ".positionY")`;
                float $closestPtZ = `getAttr ($npomNode + ".positionZ")`;
                vector $position = ($voxelCenterVector - <<$closestPtX, $closestPtY, $closestPtZ>>);
                float $normalX = `getAttr ($npomNode + ".normalX")`;
                float $normalY = `getAttr ($npomNode + ".normalY")`;
                float $normalZ = `getAttr ($npomNode + ".normalZ")`;
                vector $normalized = (<<$normalX, $normalY, $normalZ>>);
                float $dot = dot($normalized, $position);
                //float $fallOffLin = (linstep(-$falloff,0,$dot));
            //if inside -- inject
                if($densityInvertGeo==0){
                    if ($dot <= 0) {
                        float $fallOffLin = (linstep(-$falloff,0,$dot));
                        //density
                        if($setDensity){
                            if($densityFill != 2){
                                if($densityInvertFalloff==0){
                                    $fallOffLin = (1-$fallOffLin);
                                }
                                //noise
                                float $densityNoise = (linstep(0, 1, (`noise($voxelCenterVector*$densityNoiseScale)`)))*(1-$densityNoiseGain)+$densityNoiseGain;
                                if($setDensityNoise){
                                    $densityNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$densityNoiseScale)`))))*(1-$densityNoiseGain)+$densityNoiseGain;
                                }      
                                //detail noise
                                float $densityDetailNoise = (linstep(0, 1, (`noise($voxelCenterVector*$densityDetailNoiseScale)`)))*(1-$densityDetailNoiseGain)+$densityDetailNoiseGain;
                                if($setDensityDetailNoise){
                                    $densityDetailNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$densityDetailNoiseScale)`))))*(1-$densityDetailNoiseGain)+$densityDetailNoiseGain;
                                }
                                
                                $densityFalloffLin = (($fallOffLin)*($densityAmount-($densityAmount*$densityFalloff))+($densityAmount*$densityFalloff))*($densityNoise*$densityDetailNoise);
                                $densityFalloffLin = `clamp 0 $densityAmount $densityFalloffLin`;
                                $densityAmountSt = $densityFalloffLin;                                
                            } 
                            $density = "setFluidAttr -at \"density\" " + $densityFillSt + $densityAmountSt + " -xi " + $x + " -yi " + $y + " -zi " + $z + " " + $fluid + ";";
                            eval($density);
                        }
                        //temperature
                        if($setTemperature){
                            if($temperatureFill != 2){
                                if($temperatureInvertFalloff==0){
                                    $fallOffLin = (1-$fallOffLin);
                                }
                                //noise
                                float $temperatureNoise = (linstep(0, 1, (`noise($voxelCenterVector*$temperatureNoiseScale)`)))*(1-$temperatureNoiseGain)+$temperatureNoiseGain;
                                if($setTemperatureNoise){
                                    $temperatureNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$temperatureNoiseScale)`))))*(1-$temperatureNoiseGain)+$temperatureNoiseGain;
                                }      
                                //detail noise
                                float $temperatureDetailNoise = (linstep(0, 1, (`noise($voxelCenterVector*$temperatureDetailNoiseScale)`)))*(1-$temperatureDetailNoiseGain)+$temperatureDetailNoiseGain;
                                if($setTemperatureDetailNoise){
                                    $temperatureDetailNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$temperatureDetailNoiseScale)`))))*(1-$temperatureDetailNoiseGain)+$temperatureDetailNoiseGain;
                                }
                                
                                $temperatureFalloffLin = (($fallOffLin)*($temperatureAmount-($temperatureAmount*$temperatureFalloff))+($temperatureAmount*$temperatureFalloff))*($temperatureNoise*$temperatureDetailNoise);
                                $temperatureFalloffLin = `clamp 0 $temperatureAmount $temperatureFalloffLin`;
                                $temperatureAmountSt = $temperatureFalloffLin;                                
                            } 
                            $temperature = "setFluidAttr -at \"temperature\" " + $temperatureFillSt + $temperatureAmountSt + " -xi " + $x + " -yi " + $y + " -zi " + $z + " " + $fluid + ";";
                            eval($temperature);  
                        }
                        //fuel
                        if($setFuel){
                            if($fuelFill != 2){
                                if($fuelInvertFalloff==0){
                                    $fallOffLin = (1-$fallOffLin);
                                }
                                //noise
                                float $fuelNoise = (linstep(0, 1, (`noise($voxelCenterVector*$fuelNoiseScale)`)))*(1-$fuelNoiseGain)+$fuelNoiseGain;
                                if($setFuelNoise){
                                    $fuelNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$fuelNoiseScale)`))))*(1-$fuelNoiseGain)+$fuelNoiseGain;
                                }      
                                //detail noise
                                float $fuelDetailNoise = (linstep(0, 1, (`noise($voxelCenterVector*$fuelDetailNoiseScale)`)))*(1-$fuelDetailNoiseGain)+$fuelDetailNoiseGain;
                                if($setFuelDetailNoise){
                                    $fuelDetailNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$fuelDetailNoiseScale)`))))*(1-$fuelDetailNoiseGain)+$fuelDetailNoiseGain;
                                }
                                
                                $fuelFalloffLin = (($fallOffLin)*($fuelAmount-($fuelAmount*$fuelFalloff))+($fuelAmount*$fuelFalloff))*($fuelNoise*$fuelDetailNoise);
                                $fuelFalloffLin = `clamp 0 $fuelAmount $fuelFalloffLin`;
                                $fuelAmountSt = $fuelFalloffLin;                                
                            } 
                            $fuel = "setFluidAttr -at \"fuel\" " + $fuelFillSt + $fuelAmountSt + " -xi " + $x + " -yi " + $y + " -zi " + $z + " " + $fluid + ";";
                            eval($fuel);  
                        }                        
                    }
                }
            //else if outside (densityInvertGeo) -- inject
                else {
                    if ($dot >= 0) {
                        float $fallOffLin = (linstep(0, $falloff,$dot));
                        //density
                        if($setDensity){
                            if($densityFill != 2){
                                if($densityInvertFalloff==0){
                                    $fallOffLin = (1-$fallOffLin);
                                }
                                //noise
                                float $densityNoise = (linstep(0, 1, (`noise($voxelCenterVector*$densityNoiseScale)`)))*(1-$densityNoiseGain)+$densityNoiseGain;
                                if($setDensityNoise){
                                    $densityNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$densityNoiseScale)`))))*(1-$densityNoiseGain)+$densityNoiseGain;
                                }      
                                //detail noise
                                float $densityDetailNoise = (linstep(0, 1, (`noise($voxelCenterVector*$densityDetailNoiseScale)`)))*(1-$densityDetailNoiseGain)+$densityDetailNoiseGain;
                                if($setDensityDetailNoise){
                                    $densityDetailNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$densityDetailNoiseScale)`))))*(1-$densityDetailNoiseGain)+$densityDetailNoiseGain;
                                }
                                
                                $densityFalloffLin = (($fallOffLin)*($densityAmount-($densityAmount*$densityFalloff))+($densityAmount*$densityFalloff))*($densityNoise*$densityDetailNoise);
                                $densityFalloffLin = `clamp 0 $densityAmount $densityFalloffLin`;
                                $densityAmountSt = $densityFalloffLin; 
                            } 
                            $density = "setFluidAttr -at \"density\" " + $densityFillSt + $densityAmountSt + " -xi " + $x + " -yi " + $y + " -zi " + $z + " " + $fluid + ";";
                            eval($density);
                        }
                        //temperature
                        if($setTemperature){
                            if($temperatureFill != 2){
                                if($temperatureInvertFalloff==0){
                                    $fallOffLin = (1-$fallOffLin);
                                }
                                //noise
                                float $temperatureNoise = (linstep(0, 1, (`noise($voxelCenterVector*$temperatureNoiseScale)`)))*(1-$temperatureNoiseGain)+$temperatureNoiseGain;
                                if($setTemperatureNoise){
                                    $temperatureNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$temperatureNoiseScale)`))))*(1-$temperatureNoiseGain)+$temperatureNoiseGain;
                                }      
                                //detail noise
                                float $temperatureDetailNoise = (linstep(0, 1, (`noise($voxelCenterVector*$temperatureDetailNoiseScale)`)))*(1-$temperatureDetailNoiseGain)+$temperatureDetailNoiseGain;
                                if($setTemperatureDetailNoise){
                                    $temperatureDetailNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$temperatureDetailNoiseScale)`))))*(1-$temperatureDetailNoiseGain)+$temperatureDetailNoiseGain;
                                }
                                
                                $temperatureFalloffLin = (($fallOffLin)*($temperatureAmount-($temperatureAmount*$temperatureFalloff))+($temperatureAmount*$temperatureFalloff))*($temperatureNoise*$temperatureDetailNoise);
                                $temperatureFalloffLin = `clamp 0 $temperatureAmount $temperatureFalloffLin`;
                                $temperatureAmountSt = $temperatureFalloffLin; 
                            } 
                            $temperature = "setFluidAttr -at \"temperature\" " + $temperatureFillSt + $temperatureAmountSt + " -xi " + $x + " -yi " + $y + " -zi " + $z + " " + $fluid + ";";
                            eval($temperature);
                        }  
                        //fuel
                        if($setFuel){
                            if($fuelFill != 2){
                                if($fuelInvertFalloff==0){
                                    $fallOffLin = (1-$fallOffLin);
                                }
                                //noise
                                float $fuelNoise = (linstep(0, 1, (`noise($voxelCenterVector*$fuelNoiseScale)`)))*(1-$fuelNoiseGain)+$fuelNoiseGain;
                                if($setFuelNoise){
                                    $fuelNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$fuelNoiseScale)`))))*(1-$fuelNoiseGain)+$fuelNoiseGain;
                                }      
                                //detail noise
                                float $fuelDetailNoise = (linstep(0, 1, (`noise($voxelCenterVector*$fuelDetailNoiseScale)`)))*(1-$fuelDetailNoiseGain)+$fuelDetailNoiseGain;
                                if($setFuelDetailNoise){
                                    $fuelDetailNoise = (1-(linstep(-1, 0, (`noise($voxelCenterVector*$fuelDetailNoiseScale)`))))*(1-$fuelDetailNoiseGain)+$fuelDetailNoiseGain;
                                }
                                
                                $fuelFalloffLin = (($fallOffLin)*($fuelAmount-($fuelAmount*$fuelFalloff))+($fuelAmount*$fuelFalloff))*($fuelNoise*$fuelDetailNoise);
                                $fuelFalloffLin = `clamp 0 $fuelAmount $fuelFalloffLin`;
                                $fuelAmountSt = $fuelFalloffLin; 
                            } 
                            $fuel = "setFluidAttr -at \"fuel\" " + $fuelFillSt + $fuelAmountSt + " -xi " + $x + " -yi " + $y + " -zi " + $z + " " + $fluid + ";";
                            eval($fuel);
                        }                        
                    }
                }
            }
        }
        if (`progressBar -query -isCancelled $gMainProgressBar`){
            progressBar -edit -progress 0 geo_to_fluid_progBar;
            text -e -label "" geo_to_fluid_cancelTxt;
            break;
        }
        progressBar -e -step 1 geo_to_fluid_progBar;
        progressBar -edit -step 1 $gMainProgressBar; 
    }
	
//timer
    float $totalTime = `timerX -startTime $startTime[0]`;
    float $totalMinutes = $totalTime/60;

//reset progressbar
    progressBar -edit -progress 0 geo_to_fluid_progBar;
    progressBar -edit -endProgress $gMainProgressBar;
    text -e -label ("Total Time: " + $totalMinutes + " minutes") geo_to_fluid_cancelTxt;
    
//delete nearest point on mesh node
    delete $npomNode;
    
//setInitial state
    select -r $fluid;
    doSetFluidState 1 { "1", 1, 1, 1, 1, 1, 1 };
    select -cl;
    
//leave a not on injection settings
    //determin if notes attr exists -- if not add it
    if (!`attributeExists "notes" $fluidShape`){
        addAttr -ln "notes" -dt "string" $fluidShape;
        setAttr -e-keyable true ($fluidShape + ".notes");
    }
    //clear notes
    string $currentNotes = `getAttr ($fluidShape + ".notes")`;
    //add new note
    string $notes = "";
    string $densityNote = "";
    string $temperatureNote = "";
    string $fuelNote = "";

    float $res[] = `getAttr ($fluidShape + ".resolution")`;
    float $size[] = `getAttr ($fluidShape + ".dimensions")`;
    string $resNote = "------Resolution/Size------\n"
    +    "resolution = " + $res[0] + " " + $res[1] + " " + $res[2] + "\n"
    +    "size = " + $size[0] + " " + $size[1] + " " + $size[2] + "\n\n";
    //+    "---------------------------\n\n";

    if($setDensity){
        $densityNote = "---------DENSITY-----------\n"
        +    "invert falloff = " + $densityInvertFalloff + "\n"
        +    "invert geo = " + $densityInvertGeo + "\n"
        +    "invert noise = " + $setDensityNoise + "\n"
        +    "invert detail noise = " + $setDensityDetailNoise + "\n"
        +    "add/clear = " + $densityFill + "   (1==add, 2==clear)\n"
        +    "amount = " + $densityAmount + "\n"
        +    "falloff = " + $densityFalloff + "\n"
        +    "noise scale = " + $densityNoiseScale + "\n"
        +    "noise gain = " + $densityNoiseGain + "\n"
        +    "detail noise scale = " + $densityDetailNoiseScale + "\n"
        +    "detail noise gain = " + $densityDetailNoiseGain + "\n\n";
        //+    "---------------------------\n\n";
    }
    if($setTemperature){
        $temperatureNote = "-------TEMPERATURE---------\n"
        +    "invert falloff = " + $temperatureInvertFalloff + "\n"
        +    "invert geo = " + $temperatureInvertGeo + "\n"
        +    "invert noise = " + $setTemperatureNoise + "\n"
        +    "invert detail noise = " + $setTemperatureDetailNoise + "\n"
        +    "add/clear = " + $temperatureFill + "   (1==add, 2==clear)\n"
        +    "amount = " + $temperatureAmount + "\n"
        +    "falloff = " + $temperatureFalloff + "\n"
        +    "noise scale = " + $temperatureNoiseScale + "\n"
        +    "noise gain = " + $temperatureNoiseGain + "\n"
        +    "detail noise scale = " + $temperatureDetailNoiseScale + "\n"
        +    "detail noise gain = " + $temperatureDetailNoiseGain + "\n\n";
        //+    "---------------------------\n\n";
    }
    if($setFuel){
        $fuelNote = "----------FUEL-------------\n"
        +    "invert falloff = " + $fuelInvertFalloff + "\n"
        +    "invert geo = " + $fuelInvertGeo + "\n"
        +    "invert noise = " + $setFuelNoise + "\n"
        +    "invert detail noise = " + $setFuelDetailNoise + "\n"
        +    "add/clear = " + $fuelFill + "   (1==add, 2==clear)\n"
        +    "amount = " + $fuelAmount + "\n"
        +    "falloff = " + $fuelFalloff + "\n"
        +    "noise scale = " + $fuelNoiseScale + "\n"
        +    "noise gain = " + $fuelNoiseGain + "\n"
        +    "detail noise scale = " + $fuelDetailNoiseScale + "\n"
        +    "detail noise gain = " + $fuelDetailNoiseGain + "\n\n";
        //+    "---------------------------\n\n";
    }    
    string $time = "Total Time: " + $totalMinutes + " minutes\n";
    string $dash = "------------------------------------------------------\n\n\n";
    //set notes
    $notes += $currentNotes + $resNote + $densityNote + $temperatureNote + $fuelNote + $time + $dash;
    setAttr -type "string" ($fluidShape + ".notes") $notes;
    
//-------------------------------------------------------------------------------------------------------------
//print
    //$print += ("// Total Time: " + $totalMinutes + " minutes \n//\n");
    //$print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_inject


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_resetUI()

global proc geo_to_fluid_resetUI(){

    string $proc = "geo_to_fluid_resetUI";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//set ui to default values
//reset create fluid container to default
    floatSliderGrp -e -value 1.0 geo_to_fluid_sizeFSG;
    floatSliderGrp -e -value 1.0 geo_to_fluid_resFSG;

//reset density to default
    checkBox -e -v 1 geo_to_fluid_densityCB;
    radioButtonGrp -e -select 1 geo_to_fluid_densityRadio;
    floatSliderGrp -e -value 1 geo_to_fluid_densityAmountFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_densityFalloffFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_densityNoiseScaleFSG;
    floatSliderGrp -e -value 1 geo_to_fluid_densityNoiseGainFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_densityDetailNoiseScaleFSG;
    floatSliderGrp -e -value 1 geo_to_fluid_densityDetailNoiseGainFSG;
    checkBox -e -v 0 geo_to_fluid_densityInvertFallCB;
    checkBox -e -v 0 geo_to_fluid_densityInvertGeoCB;
    checkBox -e -v 0 geo_to_fluid_densityNoiseCB;
    checkBox -e -v 0 geo_to_fluid_densityDetailNoiseCB;

//reset temperature to default
    checkBox -e -v 0 geo_to_fluid_temperatureCB;
    radioButtonGrp -e -select 1 geo_to_fluid_temperatureRadio;
    floatSliderGrp -e -value 1 geo_to_fluid_temperatureAmountFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_temperatureFalloffFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_temperatureNoiseScaleFSG;
    floatSliderGrp -e -value 1 geo_to_fluid_temperatureNoiseGainFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_temperatureDetailNoiseScaleFSG;
    floatSliderGrp -e -value 1 geo_to_fluid_temperatureDetailNoiseGainFSG;
    checkBox -e -v 0 geo_to_fluid_temperatureInvertFallCB;
    checkBox -e -v 0 geo_to_fluid_temperatureInvertGeoCB;
    checkBox -e -v 0 geo_to_fluid_temperatureNoiseCB;
    checkBox -e -v 0 geo_to_fluid_temperatureDetailNoiseCB;

//reset fuel to default
    checkBox -e -v 0 geo_to_fluid_fuelCB;
    radioButtonGrp -e -select 1 geo_to_fluid_fuelRadio;
    floatSliderGrp -e -value 1 geo_to_fluid_fuelAmountFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_fuelFalloffFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_fuelNoiseScaleFSG;
    floatSliderGrp -e -value 1 geo_to_fluid_fuelNoiseGainFSG;
    floatSliderGrp -e -value 0 geo_to_fluid_fuelDetailNoiseScaleFSG;
    floatSliderGrp -e -value 1 geo_to_fluid_fuelDetailNoiseGainFSG;
    checkBox -e -v 0 geo_to_fluid_fuelInvertFallCB;
    checkBox -e -v 0 geo_to_fluid_fuelInvertGeoCB;
    checkBox -e -v 0 geo_to_fluid_fuelNoiseCB;
    checkBox -e -v 0 geo_to_fluid_fuelDetailNoiseCB;
    
//run proc
    geo_to_fluid_displayText();

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_resetUI


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_currentUI()

global proc string geo_to_fluid_currentUI(){

    string $proc = "geo_to_fluid_currentUI";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//get current settings
    string $presetText = "";
    
    if (`window -exists geo_to_fluid_Win`){
        $presetText += "//create fluid container settings\n";
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_sizeFSG` + " geo_to_fluid_sizeFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_resFSG` + " geo_to_fluid_resFSG;\n\n");
        $presetText += "//density settings\n";
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_densityCB` + " geo_to_fluid_densityCB;\n");
        $presetText += ("radioButtonGrp -e -select " + `radioButtonGrp -q -select geo_to_fluid_densityRadio` + " geo_to_fluid_densityRadio;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_densityAmountFSG` + " geo_to_fluid_densityAmountFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_densityFalloffFSG` + " geo_to_fluid_densityFalloffFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_densityNoiseScaleFSG` + " geo_to_fluid_densityNoiseScaleFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_densityNoiseGainFSG` + " geo_to_fluid_densityNoiseGainFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_densityDetailNoiseScaleFSG` + " geo_to_fluid_densityDetailNoiseScaleFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_densityDetailNoiseGainFSG` + " geo_to_fluid_densityDetailNoiseGainFSG;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_densityInvertFallCB` + " geo_to_fluid_densityInvertFallCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_densityInvertGeoCB` + " geo_to_fluid_densityInvertGeoCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_densityNoiseCB` + " geo_to_fluid_densityNoiseCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_densityDetailNoiseCB` + " geo_to_fluid_densityDetailNoiseCB;\n\n");   
        $presetText += "//temperature settings\n";
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_temperatureCB` + " geo_to_fluid_temperatureCB;\n");
        $presetText += ("radioButtonGrp -e -select " + `radioButtonGrp -q -select geo_to_fluid_temperatureRadio` + " geo_to_fluid_temperatureRadio;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_temperatureAmountFSG` + " geo_to_fluid_temperatureAmountFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_temperatureFalloffFSG` + " geo_to_fluid_temperatureFalloffFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_temperatureNoiseScaleFSG` + " geo_to_fluid_temperatureNoiseScaleFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_temperatureNoiseGainFSG` + " geo_to_fluid_temperatureNoiseGainFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_temperatureDetailNoiseScaleFSG` + " geo_to_fluid_temperatureDetailNoiseScaleFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_temperatureDetailNoiseGainFSG` + " geo_to_fluid_temperatureDetailNoiseGainFSG;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_temperatureInvertFallCB` + " geo_to_fluid_temperatureInvertFallCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_temperatureInvertGeoCB` + " geo_to_fluid_temperatureInvertGeoCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_temperatureNoiseCB` + " geo_to_fluid_temperatureNoiseCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_temperatureDetailNoiseCB` + " geo_to_fluid_temperatureDetailNoiseCB;\n\n"); 
        $presetText += "//fuel settings\n";
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_fuelCB` + " geo_to_fluid_fuelCB;\n");
        $presetText += ("radioButtonGrp -e -select " + `radioButtonGrp -q -select geo_to_fluid_fuelRadio` + " geo_to_fluid_fuelRadio;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_fuelAmountFSG` + " geo_to_fluid_fuelAmountFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_fuelFalloffFSG` + " geo_to_fluid_fuelFalloffFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_fuelNoiseScaleFSG` + " geo_to_fluid_fuelNoiseScaleFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_fuelNoiseGainFSG` + " geo_to_fluid_fuelNoiseGainFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_fuelDetailNoiseScaleFSG` + " geo_to_fluid_fuelDetailNoiseScaleFSG;\n");
        $presetText += ("floatSliderGrp -e -value " + `floatSliderGrp -q -value geo_to_fluid_fuelDetailNoiseGainFSG` + " geo_to_fluid_fuelDetailNoiseGainFSG;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_fuelInvertFallCB` + " geo_to_fluid_fuelInvertFallCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_fuelInvertGeoCB` + " geo_to_fluid_fuelInvertGeoCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_fuelNoiseCB` + " geo_to_fluid_fuelNoiseCB;\n");
        $presetText += ("checkBox -e -v " + `checkBox -q -v geo_to_fluid_fuelDetailNoiseCB` + " geo_to_fluid_fuelDetailNoiseCB;\n\n");     
    }
    
    return $presetText;

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_currentUI


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_previousUI()

global proc geo_to_fluid_previousUI(int $whatToDo){

    string $proc = "geo_to_fluid_previousUI";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//set ui to previous users values if exists
//whatToDo: 0 == write   ---   1 == read
//get scripts directory
    string $presets = "geo_to_fluids_presets";
    string $presetsDir = (`internalVar -userScriptDir` + $presets);
    string $presetsFile = ($presetsDir + "/" + "gtf_previous.txt");
    int $dirExists = `file -q -exists $presetsDir`;
    int $fileExists = `file -q -exists $presetsFile`;
    
    if($whatToDo == 0){
    //create presets dir if needed
        if($dirExists==0){
            sysFile -makeDir $presetsDir;
        }
    //get current setting and save to .txt file        
        string $presetText = `geo_to_fluid_currentUI`;
        $presetTextFile = `fopen $presetsFile "w"`;
        fprint $presetTextFile $presetText;
        fclose $presetTextFile;
    }
    else if($whatToDo == 1){
        if($dirExists && $fileExists){
            string $allText;
            $presetTextFile =`fopen $presetsFile "r"`;
            string $nextLine = `fgetline $presetTextFile`;
            while(size($nextLine) > 0){
                $nextLine = `fgetline $presetTextFile`;
                $allText += $nextLine;
            }
            fclose $presetTextFile;
            eval($allText);
        }
    //run proc
        geo_to_fluid_displayText();
    }

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_previousUI


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid_saveLoad()

global proc geo_to_fluid_saveLoad(int $whatToDo){

    string $proc = "geo_to_fluid_saveLoad";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//either save or load current settings
//whatToDo: 0 == save   ---   1 == load
    string $presets = "geo_to_fluids_presets";
    string $presetsDir = (`internalVar -userScriptDir` + $presets);
    
    if($whatToDo == 0){
        if(!`file -q -exists $presetsDir`){
            sysFile -makeDir $presetsDir;
        }
        string $useDir[] = `fileDialog2 -dir $presetsDir -dialogStyle 2 -fileMode 2 -okCaption "Use This Directory"`;
        if(size($useDir)>0){
            string $useName;
            string $dialog = `promptDialog
                -title "Preset Name"
                -message "Enter Name:"
                -text "gtf_"
                -button "OK" -button "Cancel"
                -defaultButton "OK" -cancelButton "Cancel"
                -dismissString "Cancel"`;
            if ($dialog == "OK") {
                $useName = `promptDialog -query -text`;
                string $presetsFile = ($useDir[0] + "/" + $useName + ".txt");
                if(!`file -q -exists $presetsFile`){
                    string $presetText = `geo_to_fluid_currentUI`;
                    $presetTextFile = `fopen $presetsFile "w"`;
                    fprint $presetTextFile $presetText;
                    fclose $presetTextFile;                    
                }
                else{
                    //warning ("already exists: " +  $presetsFile);
                    string $overwrite = `confirmDialog -title "OVERWRITE" -message "Already Exists...Overwrite"
                        -button "Yes" -button "No" -defaultButton "Yes"
                        -cancelButton "No" -dismissString "No"`;
                    if($overwrite == "Yes"){
                        $useName = `promptDialog -query -text`;
                        string $presetsFile = ($useDir[0] + "/" + $useName + ".txt");
                        string $presetText = `geo_to_fluid_currentUI`;
                        $presetTextFile = `fopen $presetsFile "w"`;
                        fprint $presetTextFile $presetText;
                        fclose $presetTextFile;                    
                    }
                }
            }
        }
    }
    else if($whatToDo == 1){
        string $basicFilter = "*.txt";
        string $result[] = `fileDialog2 -dir $presetsDir -fileFilter $basicFilter -dialogStyle 2 -fileMode 1 -okCaption "Load"`;
        if(size($result)>0){
            string $presetsFile = $result[0];
            string $allText;
            $presetTextFile =`fopen $presetsFile "r"`;
            string $nextLine = `fgetline $presetTextFile`;
            while(size($nextLine) > 0){
                $nextLine = `fgetline $presetTextFile`;
                $allText += $nextLine;
            }
            fclose $presetTextFile;
            eval($allText);
        //run proc
            geo_to_fluid_displayText();            
        }
    }

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid_saveLoad


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*************************************************************************************************************
//*start geo_to_fluid()

global proc geo_to_fluid(){

    string $proc = "geo_to_fluid";
    string $print = "\n\n////////////////////////////////////////////////////////////////////////////////////////////\n";
    $print += ("// " + $proc + " details: \n//\n");

//-------------------------------------------------------------------------------------------------------------
//window creation
    if (`window -exists geo_to_fluid_Win`){
        deleteUI geo_to_fluid_Win;
    }
    
    window -title "Inject Fluid Based On Geo" -resizeToFitChildren 1 -maximizeButton 0 -sizeable 1 geo_to_fluid_Win;
        formLayout geo_to_fluid_mainForm; 
            scrollLayout -childResizable 0 -p geo_to_fluid_mainForm geo_to_fluid_mainScroll;        
            columnLayout -adj 1 -p geo_to_fluid_mainScroll geo_to_fluid_mainCol;
            button -l "Inject Fluid" -c "geo_to_fluid_previousUI(0);geo_to_fluid_inject();" -h 10 -p geo_to_fluid_mainForm geo_to_fluid_executeButton;
            progressBar -h 20 -p geo_to_fluid_mainForm geo_to_fluid_progBar;
            text -font "tinyBoldLabelFont" -label "" -align "center" -w 60 -p geo_to_fluid_mainForm geo_to_fluid_cancelTxt;
            
            //-------------------------------------------------------------------------------------------------
            //create fluid container
                frameLayout -l "Create Fluid Container"  -marginHeight 5 -collapsable 1 -collapse 0 -borderStyle "etchedIn" -p geo_to_fluid_mainCol geo_to_fluid_createFluidFrame;
                    formLayout -p geo_to_fluid_createFluidFrame geo_to_fluid_createFluidForm;
                        button -l "refresh" -w 45 -h 45 -c "geo_to_fluid_displayText()" -p geo_to_fluid_createFluidForm geo_to_fluid_refreshButton;
                        floatSliderGrp -label "Fluid Size Gain" -field true -precision 4 -minValue 1.0 -maxValue 5.0 -fieldMinValue 1.0 -fieldMaxValue 50.0 -value 1.0 -changeCommand "geo_to_fluid_displayText()" -p geo_to_fluid_createFluidForm geo_to_fluid_sizeFSG;
                        floatSliderGrp -label "Fluid Resolution Gain" -field true -precision 4 -minValue 0 -maxValue 5.0 -fieldMinValue 0 -fieldMaxValue 50.0 -value 1 -changeCommand "geo_to_fluid_displayText()" -p geo_to_fluid_createFluidForm geo_to_fluid_resFSG;
                        scrollField -numberOfLines 2 -wordWrap true -editable 0 -p geo_to_fluid_createFluidForm geo_to_fluid_createFluidSF;                  
                        button -l "Create Fluid Container" -c "geo_to_fluid_create();" -h 30 -p geo_to_fluid_createFluidForm geo_to_fluid_createFluidSButton;
                        
                    formLayout -e
                        -attachForm geo_to_fluid_refreshButton "left" 15
                        -attachForm geo_to_fluid_refreshButton "top" 5
                    
                        -attachControl geo_to_fluid_sizeFSG "left" 0 geo_to_fluid_refreshButton                    
                        -attachForm geo_to_fluid_sizeFSG "right" 20
                        -attachForm geo_to_fluid_sizeFSG "top" 5
                        
                        -attachControl geo_to_fluid_resFSG "left" 0 geo_to_fluid_refreshButton
                        -attachForm geo_to_fluid_resFSG "right" 20
                        -attachControl geo_to_fluid_resFSG "top" 5 geo_to_fluid_sizeFSG
                        
                        -attachForm geo_to_fluid_createFluidSF "left" 5
                        -attachForm geo_to_fluid_createFluidSF "right" 5
                        -attachControl geo_to_fluid_createFluidSF "top" 5 geo_to_fluid_resFSG 

                        -attachForm geo_to_fluid_createFluidSButton "left" 5
                        -attachForm geo_to_fluid_createFluidSButton "right" 5
                        -attachControl geo_to_fluid_createFluidSButton "top" 5 geo_to_fluid_createFluidSF
                        -attachForm geo_to_fluid_createFluidSButton "bottom" 2 

                        
                        geo_to_fluid_createFluidForm;                      
            
            //-------------------------------------------------------------------------------------------------
            //reset ui -- save ui -- previous setting
                frameLayout -l "UI Settings"  -marginHeight 5 -collapsable 1 -collapse 0 -borderStyle "etchedIn" -p geo_to_fluid_mainCol geo_to_fluid_uiSettingsFrame;
                    formLayout -p geo_to_fluid_uiSettingsFrame geo_to_fluid_uiSettingsForm;
                        button -l "default" -w 65 -h 25 -c "geo_to_fluid_resetUI()" -p geo_to_fluid_uiSettingsForm geo_to_fluid_resetUIButton;
                        button -l "load previous" -w 85 -h 25 -c "geo_to_fluid_previousUI(1);" -p geo_to_fluid_uiSettingsForm geo_to_fluid_previousUIButton;
                        button -l "save previous" -w 85 -h 25 -c "geo_to_fluid_previousUI(0);" -p geo_to_fluid_uiSettingsForm geo_to_fluid_saveCurrentUIButton;
                        button -l "save as" -w 65 -h 25 -c "geo_to_fluid_saveLoad(0);" -p geo_to_fluid_uiSettingsForm geo_to_fluid_saveUIButton;
                        button -l "load" -w 65 -h 25 -c "geo_to_fluid_saveLoad(1);" -p geo_to_fluid_uiSettingsForm geo_to_fluid_loadUIButton;
                        
                    formLayout -e
                        -attachForm geo_to_fluid_resetUIButton "left" 20
                        -attachForm geo_to_fluid_resetUIButton "top" 5
                        -attachForm geo_to_fluid_resetUIButton "bottom" 5
                        
                        -attachControl geo_to_fluid_previousUIButton "left" 30 geo_to_fluid_resetUIButton 
                        -attachForm geo_to_fluid_previousUIButton "top" 5
                        -attachForm geo_to_fluid_previousUIButton "bottom" 5

                        -attachControl geo_to_fluid_saveCurrentUIButton "left" 2 geo_to_fluid_previousUIButton 
                        -attachForm geo_to_fluid_saveCurrentUIButton "top" 5
                        -attachForm geo_to_fluid_saveCurrentUIButton "bottom" 5
                        
                        -attachControl geo_to_fluid_saveUIButton "left" 30 geo_to_fluid_saveCurrentUIButton 
                        -attachForm geo_to_fluid_saveUIButton "top" 5
                        -attachForm geo_to_fluid_saveUIButton "bottom" 5

                        -attachControl geo_to_fluid_loadUIButton "left" 2 geo_to_fluid_saveUIButton 
                        -attachForm geo_to_fluid_loadUIButton "top" 5
                        -attachForm geo_to_fluid_loadUIButton "bottom" 5
                        
                        geo_to_fluid_uiSettingsForm;                      
                       
            //-------------------------------------------------------------------------------------------------
            //density
                frameLayout -l "Density" -marginHeight 5 -collapsable 1 -collapse 0 -borderStyle "etchedIn" -p geo_to_fluid_mainCol geo_to_fluid_densityFrame;
                    rowColumnLayout -columnWidth 1 465 -numberOfColumns 1 -p geo_to_fluid_densityFrame geo_to_fluid_densityRowCol;
                        formLayout -p geo_to_fluid_densityRowCol geo_to_fluid_densityForm;
                            checkBox -label "Density" -w 80 -v 1 -align "left" -p geo_to_fluid_densityForm geo_to_fluid_densityCB;
                            radioButtonGrp -cw 1 50 -select 1 -numberOfRadioButtons 2 -labelArray2 "Add" "Clear" -p geo_to_fluid_densityForm geo_to_fluid_densityRadio;
                            floatSliderGrp -label "Amount" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 1 -p geo_to_fluid_densityForm geo_to_fluid_densityAmountFSG;
                            floatSliderGrp -label "Falloff" -field true -precision 4 -minValue 0 -maxValue 1.0 -value 0 -p geo_to_fluid_densityForm geo_to_fluid_densityFalloffFSG;
                            floatSliderGrp -label "Noise Scale" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 0 -p geo_to_fluid_densityForm geo_to_fluid_densityNoiseScaleFSG;
                            floatSliderGrp -label "Noise Gain" -field true -precision 4 -minValue -1.0 -maxValue 1.0 -value 1 -p geo_to_fluid_densityForm geo_to_fluid_densityNoiseGainFSG;
                            floatSliderGrp -label "Detail Noise Scale" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 0 -p geo_to_fluid_densityForm geo_to_fluid_densityDetailNoiseScaleFSG;
                            floatSliderGrp -label "Detail Noise Gain" -field true -precision 4 -minValue -1.0 -maxValue 1.0 -value 1 -p geo_to_fluid_densityForm geo_to_fluid_densityDetailNoiseGainFSG;
                            checkBox -label "invert falloff" -w 110 -v 0 -align "left" -p geo_to_fluid_densityForm geo_to_fluid_densityInvertFallCB;
                            checkBox -label "invert geo" -w 100 -v 0 -align "left" -p geo_to_fluid_densityForm geo_to_fluid_densityInvertGeoCB;
                            checkBox -label "invert noise" -w 80 -v 0 -align "left" -p geo_to_fluid_densityForm geo_to_fluid_densityNoiseCB;
                            checkBox -label "invert detail noise" -w 110 -v 0 -align "left" -p geo_to_fluid_densityForm geo_to_fluid_densityDetailNoiseCB;
   
                        formLayout -e
                            -attachForm geo_to_fluid_densityCB "left" 20
                            -attachForm geo_to_fluid_densityCB "top" 5                  
                            
                            -attachForm geo_to_fluid_densityInvertFallCB "left" 200                    
                            -attachForm geo_to_fluid_densityInvertFallCB "top" 5
                            
                            -attachControl geo_to_fluid_densityInvertGeoCB "left" 8 geo_to_fluid_densityInvertFallCB                    
                            -attachForm geo_to_fluid_densityInvertGeoCB "top" 5                            

                            -attachForm geo_to_fluid_densityRadio "left" 40
                            -attachControl geo_to_fluid_densityRadio "top" 15 geo_to_fluid_densityCB 

                            -attachForm geo_to_fluid_densityNoiseCB "left" 200                
                            -attachControl geo_to_fluid_densityNoiseCB "top" 13 geo_to_fluid_densityCB

                            -attachControl geo_to_fluid_densityDetailNoiseCB "left" 38 geo_to_fluid_densityNoiseCB                    
                            -attachControl geo_to_fluid_densityDetailNoiseCB "top" 13 geo_to_fluid_densityCB                             

                            -attachForm geo_to_fluid_densityAmountFSG "left" 0
                            -attachControl geo_to_fluid_densityAmountFSG "top" 10 geo_to_fluid_densityRadio                            
                            
                            -attachControl geo_to_fluid_densityFalloffFSG "top" 5 geo_to_fluid_densityAmountFSG                        
                            -attachForm geo_to_fluid_densityFalloffFSG "left" 0  
                            
                            -attachControl geo_to_fluid_densityNoiseScaleFSG "top" 5 geo_to_fluid_densityFalloffFSG                        
                            -attachForm geo_to_fluid_densityNoiseScaleFSG "left" 0  

                            -attachControl geo_to_fluid_densityNoiseGainFSG "top" 5 geo_to_fluid_densityNoiseScaleFSG                        
                            -attachForm geo_to_fluid_densityNoiseGainFSG "left" 0 

                            -attachControl geo_to_fluid_densityDetailNoiseScaleFSG "top" 5 geo_to_fluid_densityNoiseGainFSG                        
                            -attachForm geo_to_fluid_densityDetailNoiseScaleFSG "left" 0  

                            -attachControl geo_to_fluid_densityDetailNoiseGainFSG "top" 5 geo_to_fluid_densityDetailNoiseScaleFSG                        
                            -attachForm geo_to_fluid_densityDetailNoiseGainFSG "left" 0                              
                            geo_to_fluid_densityForm;
            
            //-------------------------------------------------------------------------------------------------            
            //temperature                            
                frameLayout -l "Temperature"  -marginHeight 5 -collapsable 1 -collapse 1 -borderStyle "etchedIn" -p geo_to_fluid_mainCol geo_to_fluid_temperatureFrame;
                    rowColumnLayout -columnWidth 1 465 -numberOfColumns 1 -p geo_to_fluid_temperatureFrame geo_to_fluid_temperatureRowCol;
                        formLayout -p geo_to_fluid_temperatureRowCol geo_to_fluid_temperatureForm;
                            checkBox -label "Temperature" -w 80 -v 0 -align "left" -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureCB;
                            radioButtonGrp -cw 1 50 -select 1 -numberOfRadioButtons 2 -labelArray2 "Add" "Clear" -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureRadio;
                            floatSliderGrp -label "Amount" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 1 -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureAmountFSG;
                            floatSliderGrp -label "Falloff" -field true -precision 4 -minValue 0 -maxValue 1.0 -value 0 -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureFalloffFSG;
                            floatSliderGrp -label "Noise Scale" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 0 -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureNoiseScaleFSG;
                            floatSliderGrp -label "Noise Gain" -field true -precision 4 -minValue -1.0 -maxValue 1.0 -value 1 -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureNoiseGainFSG;
                            floatSliderGrp -label "Detail Noise Scale" -precision 4 -field true -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 0 -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureDetailNoiseScaleFSG;
                            floatSliderGrp -label "Detail Noise Gain" -precision 4 -field true -minValue -1.0 -maxValue 1.0 -value 1 -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureDetailNoiseGainFSG;
                            checkBox -label "invert falloff" -w 110 -v 0 -align "left" -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureInvertFallCB;
                            checkBox -label "invert geo" -w 100 -v 0 -align "left" -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureInvertGeoCB;
                            checkBox -label "invert noise" -w 80 -v 0 -align "left" -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureNoiseCB;
                            checkBox -label "invert detail noise" -w 110 -v 0 -align "left" -p geo_to_fluid_temperatureForm geo_to_fluid_temperatureDetailNoiseCB;
   
                        formLayout -e
                            -attachForm geo_to_fluid_temperatureCB "left" 20
                            -attachForm geo_to_fluid_temperatureCB "top" 5                  
                            
                            -attachForm geo_to_fluid_temperatureInvertFallCB "left" 200                    
                            -attachForm geo_to_fluid_temperatureInvertFallCB "top" 5
                            
                            -attachControl geo_to_fluid_temperatureInvertGeoCB "left" 8 geo_to_fluid_temperatureInvertFallCB                    
                            -attachForm geo_to_fluid_temperatureInvertGeoCB "top" 5                            

                            -attachForm geo_to_fluid_temperatureRadio "left" 40
                            -attachControl geo_to_fluid_temperatureRadio "top" 15 geo_to_fluid_temperatureCB 

                            -attachForm geo_to_fluid_temperatureNoiseCB "left" 200              
                            -attachControl geo_to_fluid_temperatureNoiseCB "top" 13 geo_to_fluid_temperatureCB

                            -attachControl geo_to_fluid_temperatureDetailNoiseCB "left" 38 geo_to_fluid_temperatureNoiseCB                    
                            -attachControl geo_to_fluid_temperatureDetailNoiseCB "top" 13 geo_to_fluid_temperatureCB                             

                            -attachForm geo_to_fluid_temperatureAmountFSG "left" 0
                            -attachControl geo_to_fluid_temperatureAmountFSG "top" 10 geo_to_fluid_temperatureRadio                            
                            
                            -attachControl geo_to_fluid_temperatureFalloffFSG "top" 5 geo_to_fluid_temperatureAmountFSG                        
                            -attachForm geo_to_fluid_temperatureFalloffFSG "left" 0  
                            
                            -attachControl geo_to_fluid_temperatureNoiseScaleFSG "top" 5 geo_to_fluid_temperatureFalloffFSG                        
                            -attachForm geo_to_fluid_temperatureNoiseScaleFSG "left" 0  

                            -attachControl geo_to_fluid_temperatureNoiseGainFSG "top" 5 geo_to_fluid_temperatureNoiseScaleFSG                        
                            -attachForm geo_to_fluid_temperatureNoiseGainFSG "left" 0 

                            -attachControl geo_to_fluid_temperatureDetailNoiseScaleFSG "top" 5 geo_to_fluid_temperatureNoiseGainFSG                        
                            -attachForm geo_to_fluid_temperatureDetailNoiseScaleFSG "left" 0  

                            -attachControl geo_to_fluid_temperatureDetailNoiseGainFSG "top" 5 geo_to_fluid_temperatureDetailNoiseScaleFSG                        
                            -attachForm geo_to_fluid_temperatureDetailNoiseGainFSG "left" 0                              
                            geo_to_fluid_temperatureForm;

            //-------------------------------------------------------------------------------------------------            
            //fuel                            
                frameLayout -l "Fuel"  -marginHeight 5 -collapsable 1 -collapse 1 -borderStyle "etchedIn" -p geo_to_fluid_mainCol geo_to_fluid_fuelFrame;
                    rowColumnLayout -columnWidth 1 465 -numberOfColumns 1 -p geo_to_fluid_fuelFrame geo_to_fluid_fuelRowCol;
                        formLayout -p geo_to_fluid_fuelRowCol geo_to_fluid_fuelForm;
                            checkBox -label "Fuel" -w 80 -v 0 -align "left" -p geo_to_fluid_fuelForm geo_to_fluid_fuelCB;
                            radioButtonGrp -cw 1 50 -select 1 -numberOfRadioButtons 2 -labelArray2 "Add" "Clear" -p geo_to_fluid_fuelForm geo_to_fluid_fuelRadio;
                            floatSliderGrp -label "Amount" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 1 -p geo_to_fluid_fuelForm geo_to_fluid_fuelAmountFSG;
                            floatSliderGrp -label "Falloff" -field true -precision 4 -minValue 0 -maxValue 1.0 -value 0 -p geo_to_fluid_fuelForm geo_to_fluid_fuelFalloffFSG;
                            floatSliderGrp -label "Noise Scale" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 0 -p geo_to_fluid_fuelForm geo_to_fluid_fuelNoiseScaleFSG;
                            floatSliderGrp -label "Noise Gain" -field true -precision 4 -minValue -1.0 -maxValue 1.0 -value 1 -p geo_to_fluid_fuelForm geo_to_fluid_fuelNoiseGainFSG;
                            floatSliderGrp -label "Detail Noise Scale" -field true -precision 4 -minValue -5.0 -maxValue 5.0 -fieldMinValue -50.0 -fieldMaxValue 50.0 -value 0 -p geo_to_fluid_fuelForm geo_to_fluid_fuelDetailNoiseScaleFSG;
                            floatSliderGrp -label "Detail Noise Gain" -field true -precision 4 -minValue -1.0 -maxValue 1.0 -value 1 -p geo_to_fluid_fuelForm geo_to_fluid_fuelDetailNoiseGainFSG;
                            checkBox -label "invert falloff" -w 110 -v 0 -align "left" -p geo_to_fluid_fuelForm geo_to_fluid_fuelInvertFallCB;
                            checkBox -label "invert geo" -w 100 -v 0 -align "left" -p geo_to_fluid_fuelForm geo_to_fluid_fuelInvertGeoCB;
                            checkBox -label "invert noise" -w 80 -v 0 -align "left" -p geo_to_fluid_fuelForm geo_to_fluid_fuelNoiseCB;
                            checkBox -label "invert detail noise" -w 110 -v 0 -align "left" -p geo_to_fluid_fuelForm geo_to_fluid_fuelDetailNoiseCB;
   
                        formLayout -e
                            -attachForm geo_to_fluid_fuelCB "left" 20
                            -attachForm geo_to_fluid_fuelCB "top" 5                  
                            
                            -attachForm geo_to_fluid_fuelInvertFallCB "left" 200                    
                            -attachForm geo_to_fluid_fuelInvertFallCB "top" 5
                            
                            -attachControl geo_to_fluid_fuelInvertGeoCB "left" 8 geo_to_fluid_fuelInvertFallCB                    
                            -attachForm geo_to_fluid_fuelInvertGeoCB "top" 5                            

                            -attachForm geo_to_fluid_fuelRadio "left" 40
                            -attachControl geo_to_fluid_fuelRadio "top" 15 geo_to_fluid_fuelCB 

                            -attachForm geo_to_fluid_fuelNoiseCB "left" 200                
                            -attachControl geo_to_fluid_fuelNoiseCB "top" 13 geo_to_fluid_fuelCB

                            -attachControl geo_to_fluid_fuelDetailNoiseCB "left" 38 geo_to_fluid_fuelNoiseCB                    
                            -attachControl geo_to_fluid_fuelDetailNoiseCB "top" 13 geo_to_fluid_fuelCB                             

                            -attachForm geo_to_fluid_fuelAmountFSG "left" 0
                            -attachControl geo_to_fluid_fuelAmountFSG "top" 10 geo_to_fluid_fuelRadio                            
                            
                            -attachControl geo_to_fluid_fuelFalloffFSG "top" 5 geo_to_fluid_fuelAmountFSG                        
                            -attachForm geo_to_fluid_fuelFalloffFSG "left" 0  
                            
                            -attachControl geo_to_fluid_fuelNoiseScaleFSG "top" 5 geo_to_fluid_fuelFalloffFSG                        
                            -attachForm geo_to_fluid_fuelNoiseScaleFSG "left" 0  

                            -attachControl geo_to_fluid_fuelNoiseGainFSG "top" 5 geo_to_fluid_fuelNoiseScaleFSG                        
                            -attachForm geo_to_fluid_fuelNoiseGainFSG "left" 0 

                            -attachControl geo_to_fluid_fuelDetailNoiseScaleFSG "top" 5 geo_to_fluid_fuelNoiseGainFSG                        
                            -attachForm geo_to_fluid_fuelDetailNoiseScaleFSG "left" 0  

                            -attachControl geo_to_fluid_fuelDetailNoiseGainFSG "top" 5 geo_to_fluid_fuelDetailNoiseScaleFSG                        
                            -attachForm geo_to_fluid_fuelDetailNoiseGainFSG "left" 0                              
                            geo_to_fluid_fuelForm;                            
                    
    //---------------------------------------------------------------------------------------------------------
    //edit mainColumn
        formLayout -e
        -attachForm geo_to_fluid_mainScroll "left" 0
        -attachForm geo_to_fluid_mainScroll "right" 0
        -attachForm geo_to_fluid_mainScroll "top" 0
        -attachForm geo_to_fluid_mainScroll "bottom" 80

        -attachForm geo_to_fluid_cancelTxt "left" 5
        -attachForm geo_to_fluid_cancelTxt "right" 5
        -attachControl geo_to_fluid_cancelTxt "top" 5 geo_to_fluid_mainScroll
        -attachForm geo_to_fluid_cancelTxt "bottom" 60          
        
        -attachForm geo_to_fluid_progBar "left" 5
        -attachForm geo_to_fluid_progBar "right" 5
        -attachControl geo_to_fluid_progBar "top" 5 geo_to_fluid_cancelTxt
        -attachForm geo_to_fluid_progBar "bottom" 40

        -attachForm geo_to_fluid_executeButton "left" 5
        -attachForm geo_to_fluid_executeButton "right" 5
        -attachControl geo_to_fluid_executeButton "top" 5 geo_to_fluid_progBar
        -attachForm geo_to_fluid_executeButton "bottom" 2        
        geo_to_fluid_mainForm;

//show and resize window        
    showWindow geo_to_fluid_Win;    
    window -e -wh 485 685 geo_to_fluid_Win;
    
//run procs
    geo_to_fluid_displayText();
    geo_to_fluid_previousUI(1);    
    

//-------------------------------------------------------------------------------------------------------------
//print
    $print += "////////////////////////////////////////////////////////////////////////////////////////////\n\n";
    //print $print;
    //print ("COMPLETE -- check script editor for details...\n");
}
//*************************************************************************************************************
//*end geo_to_fluid


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
